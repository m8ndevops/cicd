version: 0.2


phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - REPOSITORY_URI=173437313385.dkr.ecr.ap-south-1.amazonaws.com/test
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"test","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - printf '[{"version":"3","services":{"web":{"container_name":"nginx","image":"%s","ports":["80:80"]}}}]' $REPOSITORY_URI:$IMAGE_TAG > image.json
      - cat imagedefinitions.json 
      - echo "docker pull $REPOSITORY_URI:$IMAGE_TAG" > docker/env.sh
      - echo "version:" "'3'" > docker/docker.yml
      - echo "services:" >> docker/docker.yml
      - echo "  web:" >> docker/docker.yml
      - echo "    container_name:" "nginx" >> docker/docker.yml
      - echo "    image:" "$REPOSITORY_URI:$IMAGE_TAG" >> docker/docker.yml
      - echo "    ports:" >> docker/docker.yml
      - echo "      - 80:80" >> docker/docker.yml

artifacts:
    files: 
      - 'imagedefinitions.json'
      - 'image.json'
      - 'docker/docker-compose.yml'
      - 'docker/env.sh'
      - 'docker/docker.yml'
      - 'appspec.yml'
      - 'docker.sh'
